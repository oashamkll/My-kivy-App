name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          git \
          zip \
          unzip \
          openjdk-11-jdk \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev \
          python3-pip

    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33
        pip install virtualenv

    - name: Setup Android SDK and NDK
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        
        # Download Android Command Line Tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        mkdir -p android-sdk
        unzip -q commandlinetools-linux-8512546_latest.zip -d android-sdk
        mkdir -p android-sdk/cmdline-tools/latest
        mv android-sdk/cmdline-tools/* android-sdk/cmdline-tools/latest/
        
        # Set environment variables
        echo "ANDROID_SDK_ROOT=$PWD/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$PWD/android-sdk" >> $GITHUB_ENV
        echo "$PWD/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        
        # Create local.properties for Buildozer
        echo "sdk.dir=$PWD/android-sdk" > local.properties
        echo "ndk.dir=$PWD/android-ndk" >> local.properties

    - name: Install Android packages
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platforms;android-31"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "build-tools;30.0.3"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "tools"

    - name: Download Android NDK
      run: |
        wget -q https://dl.google.com/android/repository/android-ndk-r23b-linux.zip
        unzip -q android-ndk-r23b-linux.zip
        mv android-ndk-r23b android-ndk
        echo "ANDROID_NDK_HOME=$PWD/android-ndk" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$PWD/android-ndk" >> $GITHUB_ENV
        echo "$PWD/android-ndk" >> $GITHUB_PATH

    - name: Build APK with Buildozer
      run: |
        export PATH=$PATH:$ANDROID_NDK_HOME
        buildozer -v android clean
        buildozer -v android debug
        ls -la bin/

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: Snake-By-Pasha-APK
        path: bin/*.apk
        retention-days: 30

    - name: Upload to Release (if triggered by release)
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./bin/*.apk
        asset_name: Snake-By-Pasha-${{ github.event.release.tag_name }}.apk
        asset_content_type: application/vnd.android.package-archive
