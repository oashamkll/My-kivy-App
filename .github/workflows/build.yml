name: Build APK

# Запуск при push или вручную
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04  # СТАБИЛЬНАЯ версия Ubuntu

    steps:
    # Шаг 1: Клонирование репозитория
    - name: Checkout repository
      uses: actions/checkout@v3

    # Шаг 2: Установка Python (СТАБИЛЬНАЯ версия)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Шаг 3: Кэширование buildozer
    - name: Cache Buildozer
      uses: actions/cache@v3
      with:
        path: |
          .buildozer
          ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    # Шаг 4: Сборка APK с помощью Buildozer Action
    - name: Build APK with Buildozer
      uses: ArtemSBulgakov/buildozer-action@v1
      id: buildozer
      with:
        command: buildozer android debug
        buildozer_version: stable

    # Шаг 5: Загрузка APK как артефакт
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: MyApp-APK
        path: ${{ steps.buildozer.outputs.filename }}

    # Шаг 6: Создание Release (опционально, при создании тега)
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.buildozer.outputs.filename }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
